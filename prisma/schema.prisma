// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int        @id @default(autoincrement())
  name          String     @db.VarChar(255)
  wallet        String     @db.VarChar(255)
  createdAt     DateTime   @default(now()) @db.Timestamp(6)
  verified      Boolean    @default(false)
  contributions Resource[]
}

model Chain {
  id          Int        @id @default(autoincrement())
  createdAt   DateTime   @default(now()) @db.Timestamp(6)
  title       String     @db.VarChar(255)
  description String?
  resources   Resource[]
  categories  Category[]
}

model Category {
  id          Int        @id @default(autoincrement())
  createdAt   DateTime   @default(now()) @db.Timestamp(6)
  title       String     @db.VarChar(255)
  description String?
  blockchains Chain[]
  resources   Resource[]
}

model Resource {
  id          Int        @id @default(autoincrement())
  createdAt   DateTime   @default(now()) @db.Timestamp(6)
  updatedAt   DateTime   @default(now()) //verify method for current time
  title       String     @db.VarChar(255)
  description String?
  link        String     
  imagelink   String     @db.VarChar(255)
  blockchains Chain[]
  categories  Category[]
  author      User       @relation(fields: [authorId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  authorId    Int
  type        Type?      @relation(fields: [typeId], references: [id])
  typeId      Int
}

model Type {
  id        Int        @id @default(autoincrement())
  title     String     @db.VarChar(255)
  resources Resource[]
}
